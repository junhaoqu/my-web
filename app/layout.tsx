import type { Metadata } from "next";
import { Audiowide, Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const audiowide = Audiowide({
  variable: "--font-audiowide",
  weight: "400",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" data-theme="dark" suppressHydrationWarning>
      <head>
        <script
          dangerouslySetInnerHTML={{
            __html: `
              // 立即设置主题，避免闪烁
              (function() {
                const storedTheme = localStorage.getItem('theme');
                const shouldBeDark = storedTheme === 'light' ? false : true;
                document.documentElement.setAttribute('data-theme', shouldBeDark ? 'dark' : 'light');
              })();
              
              // 立即重置滚动位置，避免闪烁
              if (typeof window !== 'undefined') {
                window.scrollTo(0, 0);
                if ('scrollRestoration' in history) {
                  history.scrollRestoration = 'manual';
                }
              }
            `,
          }}
        />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${audiowide.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}
